"use client";

import {
  BadgeCheck,
  Bell,
  ChevronsUpDown,
  CreditCard,
  LogOut,
  Sparkles,
} from "lucide-react";

  <DropdownMenuLabel className="p-0 font-normal">
              <div className="flex items-center gap-2 px-1 py-1.5 text-left text-sm">
                <Avatar className="h-8 w-8 rounded-lg">
                  <AvatarImage src={user.avatar} alt={user.name} />
                  <AvatarFallback className="rounded-lg">CN</AvatarFallback>
    </Avatar>
                <div className="grid flex-1 text-left text-sm leading-tight">
                  <span className="truncate font-semibold">{user.name}</span>
                  <span className="truncate text-xs">{user.email}</span>
                </div>
  </div>
            </DropdownMenuLabel>
            <DropdownMenuSeparator />
            <DropdownMenuGroup>
              <DropdownMenuItem>
                <Sparkles />
                Upgrade to Pro
              </DropdownMenuItem>
            </DropdownMenuGroup>
            <DropdownMenuSeparator />
            <DropdownMenuGroup>
              <DropdownMenuItem>
              export function NavProjects({
  items,
}: {
  items: {
    title: string;
    url: string;
    icon?: LucideIcon;
    isActive?: boolean;
    items?: {
      title: string;
      url: string;
    }[];
  }[];
                }) {
                 return (
    <SidebarGroup>
      <SidebarGroupLabel>Others</SidebarGroupLabel>
      <SidebarMenu>
        {items.map((item) => (
          <Collapsible
            key={item.title}
            asChild
            defaultOpen={item.isActive}
            className="group/collapsible"
          > <SidebarMenuItem>
              <SidebarMenuButton tooltip={item.title}>
                {item.icon && <item.icon />}
                <span>{item.title}</span>
              </SidebarMenuButton>
            </SidebarMenuItem>
          </Collapsible>
        ))}
      </SidebarMenu>
    </SidebarGroup>
  );
}
const LandingPage = () => {
  return (
    <div className="flex items-center flex-col justify-center h-screen">
      <Image src="/logo.png" alt="Logo" width={100} height={100} />
      <p className="text-5xl font-black text-blue-600 mt-3">Welcome To Lazada Logistics Applicant System</p>
      <p className="mt-2">Please fill out the following information to apply for a position. You can print your application after submitting it.</p>
      <div className="flex items-center gap-2">
      <Link href="/onboarding" className={`mt-5 px-10 ${buttonVariants()}`}>Apply Now</Link>
      <Link href="/login" className={`mt-5 px-10 ${buttonVariants({variant: "destructive"})}`}>Login &rarr;</Link>
      </div>
    </div>
  );
};
const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});
export const metadata: Metadata = {
  title: "Lazada Expedise Agency PH",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Toaster richColors position="top-center" />
        {children}
      </body>
    </html>
  );
}
const Onboarding = () => {
  const { step } = useApplicationAppStore();

  // Function to render the current step based on the state
  const renderStep = () => {
    switch (step) {
      case 1:
        return <PersonalInfo />;
      case 2:
        return <QualificationInfo />;
      case 3:
        return <WorkInfo />;
      case 4:
        return <EducationInfo />;
      case 5:
        return <ReviewSubmit />;
      default:
        return null;
    }
  };
  return (
    <div className="relative pb-20">
      {/* Blue Background Box */}
      <div className="bg-blue-600 -z-10 absolute w-full h-60 top-0 inset-x-0"></div>

      {/* Title inside the Blue Box */}
      <p className="text-center text-white font-bold text-3xl pt-20">
        Lazada Logistics Application Form
      </p>
      <p className="text-center text-white font-normal text-lg pt-2">
        Please complete all the steps below to provide your personal, work, and
        educational information. This will help us evaluate your qualifications
        for the role.
      </p>
           {/* STEPS */}
      <div className="relative z-10 mt-10 p-6 bg-white shadow-lg border rounded-lg max-w-4xl mx-auto">
        {/* PROGRESS BAR */}
        <ProgressBar />
        {renderStep()}
      </div>
    </div>
  );
};
const FailModal = ({
  isOpen,
  onClose,
  data,
}: {
  isOpen: boolean;
  onClose: () => void;
  data: any;
}) => {
  const params = useParams();
  const [reason, setReason] = React.useState("");
  const [loading, setLoading] = React.useState(false);
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    try {
      if (typeof params.applicationId === "string") {
        const response = await failApplicant(
          params.applicationId,
          data.jobApplicant.name,
          data.jobApplicant.email,
          reason
        );
        if (response.error) {
          toast.error(response.error);
        } else {
          toast.success(response.success);
          window.location.assign("/admin/application-management");
        }
      } else {
        toast.error("Invalid application ID");
      }
    } catch (error) {
      toast.error("Failed to fail application");
      console.error(error);
    } finally {
      setLoading(false);
    }
  };
   return (
    <Modal
      isOpen={isOpen}
      onClose={onClose}
      description="This action cannot be undone"
      title="Are you sure you want to fail this application?"
    >
      <form onSubmit={handleSubmit} className="space-y-3">
        <div className="space-y-1">
          <Label>
            Reason for Failure <span className="text-red-500">*</span>
          </Label>
          <Textarea
            value={reason}
            onChange={(e) => setReason(e.target.value)}
            disabled={loading}
            placeholder="Enter Reason for Failure"
          />
        </div>
        "use client";

import React, { useState } from "react";
import { Button } from "../ui/button";
import useApplicationAppStore from "@/lib/store";
import { educationInfoSchema } from "@/lib/validators";
import { Separator } from "../ui/separator";
import { Label } from "../ui/label";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "../ui/select";